# Anthropic API Key
ANTHROPIC_API_KEY=xxx

# Anthropic Model Configuration
ANTHROPIC_MODEL=claude-sonnet-4-5-20250929

# Enable 1M token context window (opt-out: enabled by default)
# Set to "false" to disable extended context and use standard 200K window
ANTHROPIC_EXTENDED_CONTEXT=true

# GitHub App Configuration
# APP_ID=your_app_id
# Option A: point to the downloaded .pem file
# PRIVATE_KEY_PATH=./github-app.pem
#
# Option B: paste the PEM value into the variable (use \\n for line breaks)
# PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n...content...\n-----END PRIVATE KEY-----\n"
#
# Option C: paste the base64-encoded key (auto-detected)
# PRIVATE_KEY="MIIEvAIBADANBgkqhkiG9w0BAQEFA..."
#
# Note: Prefer using the .pem private key downloaded from your GitHub App.

WEBHOOK_SECRET=xxxx

# Optional: Webhook Proxy URL for local development
WEBHOOK_PROXY_URL=https://smee.io/xxx

# Proxy User Configuration (for manual review requests)
PROXY_REVIEWER_USERNAME=your-proxy-user
PROXY_REVIEWER_TOKEN=ghp_your_token_here

# Server Configuration (Probot v14)
HOST=0.0.0.0
PORT=3000

# Optional: Valkey/Redis cache for compute cache (discussion replies)
# When REDIS_URL is set, Revu uses Redis-backed cache; otherwise it falls back to in-memory.
# Example for docker-compose setup (service name "valkey"):
# REDIS_URL=redis://valkey:6379/0
# Redis DB index (optional, default 0)
# REDIS_DB=0
# Redis password (optional if your instance requires auth)
# REDIS_PASSWORD=
# Enable TLS (set to "true" if your Redis/Valkey endpoint uses TLS)
# REDIS_TLS=false

# Rate limiting for discussion replies
# Maximum number of replies allowed per user per PR within the window
# REPLIES_PER_WINDOW=10
# Length of the rate limit window in seconds (default 3600 = 1 hour)
# RATE_WINDOW_SECONDS=3600

# Authorization model
# If set to "true", when org membership checks aren't available the app will
# fallback to repo collaborator permissions. Default is false for stricter posture.
# AUTHZ_FALLBACK_TO_REPO=false
